/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MADRouter1155, MADRouter1155Interface } from "../MADRouter1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory1155",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "creatorBatchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "creatorMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimRoot",
        type: "bytes32",
      },
    ],
    name: "freeSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "gift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "minimalSafeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "_stateType",
        type: "uint8",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805534801561001457600080fd5b506040516200234538038062002345833981016040819052610035916100a8565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100d6565b6000602082840312156100b9578081fd5b81516001600160a01b03811681146100cf578182fd5b9392505050565b61225f80620000e66000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806367b5a642116100cd578063ae6e7faf11610081578063ba36b92d11610066578063ba36b92d1461029f578063cab2e41f146102b2578063f940e385146102c557600080fd5b8063ae6e7faf14610279578063b949f44f1461028c57600080fd5b80638da5cb5b116100b25780638da5cb5b14610240578063a123c38d14610253578063ab9acd571461026657600080fd5b806367b5a642146102255780638456cb591461023857600080fd5b80633f4ba83a11610124578063485cffad11610109578063485cffad146101ca5780635041c8e7146101dd5780635c975abb1461020857600080fd5b80633f4ba83a146101af57806342a42752146101b757600080fd5b806306fdde031461015657806313af40351461017457806317f9fad114610189578063182ee4851461019c575b600080fd5b61015e6102d8565b60405161016b9190612173565b60405180910390f35b610187610182366004611d41565b6102ef565b005b610187610197366004611d64565b610379565b6101876101aa366004611ff9565b610421565b610187610562565b6101876101c5366004611d64565b6105b5565b6101876101d8366004611e7f565b6106ee565b6002546101f0906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b600054600160a01b900460ff16604051901515815260200161016b565b610187610233366004611dfc565b6107bb565b6101876108c7565b6000546101f0906001600160a01b031681565b610187610261366004612024565b610918565b610187610274366004611efb565b610a2e565b610187610287366004611f57565b610bfd565b61018761029a366004611d9c565b610db3565b6101876102ad366004611e7f565b610ece565b6101876102c0366004612024565b61102d565b6101876102d3366004611f45565b611109565b6060602080526606726f7574657260465260606020f35b6000546001600160a01b0316331461033d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146103c25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610334565b604051636c19e78360e01b81526001600160a01b038281166004830152831690636c19e78390602401600060405180830381600087803b15801561040557600080fd5b505af1158015610419573d6000803e3d6000fd5b505050505050565b6001546001146104605760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff16156104a85760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b60006104b3836118c5565b9150508060ff166002141561052257604051630ef4eb0360e41b8152600481018390526001600160a01b0384169063ef4eb030906024015b600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b50505050610559565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610334565b50506001805550565b6000546001600160a01b031633146105ab5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610334565b6105b3611a47565b565b6001546001146105f45760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff161561063c5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b6000610647836118c5565b91505060ff81161561068a5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610334565b6040516340d097c360e01b81526001600160a01b0383811660048301528416906340d097c390602401600060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b5050600180555050505050565b60015460011461072d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff16156107755760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b6000610780836118c5565b9150508060ff16600214156105225760405163640da9ed60e01b81526001600160a01b0384169063640da9ed906104eb908590600401612160565b6001546001146107fa5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff16156108425760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b600061084d846118c5565b9150508060ff166002141561052257604051630880ea9b60e31b81526001600160a01b0385169063440754d89061088a9086908690600401612112565b600060405180830381600087803b1580156108a457600080fd5b505af11580156108b8573d6000803e3d6000fd5b505050505b5050600180555050565b6000546001600160a01b031633146109105760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610334565b6105b3611ae3565b6001546001146109575760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff161561099f5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b60006109aa856118c5565b9150508060ff1660021415610522576040516386997e7d60e01b81526004810185905260248101849052604481018390526001600160a01b038616906386997e7d906064015b600060405180830381600087803b158015610a0a57600080fd5b505af1158015610a1e573d6000803e3d6000fd5b505050505b505060018055505050565b600154600114610a6d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff1615610ab55760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b60038160ff1610610af75760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610334565b600080610b03856118c5565b9150915060018360ff161015610b5757610b1e818686611b69565b8315158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a4610a23565b8260ff1660011415610ba757610b6e818686611c4a565b8315158160ff16837f8fb26c046352958e1f6b6a24432925f21e52878afea867b4b642e5d07c6abf0f60405160405180910390a4610a23565b8260ff1660021415610a2357610bbe818686611c84565b8315158160ff16837fcaca6c2e85f8f4d6f254385762b7a5baec7c68441678ee0a9b1ea8bb4b05bf0b60405160405180910390a4505060018055505050565b600154600114610c3c5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff1615610c845760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b600080610c90846118c5565b915091508060ff1660011415610d43576040516302fe530560e01b81526001600160a01b038516906302fe530590610ccc908690600401612173565b600060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b5050505082604051610d0c91906120cc565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a36108bd565b8060ff1660021415610d7b576040516302fe530560e01b81526001600160a01b038516906302fe530590610ccc908690600401612173565b60028160ff161115610522576040516302fe530560e01b81526001600160a01b038516906302fe530590610ccc908690600401612173565b600154600114610df25760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff1615610e3a5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b6000610e45846118c5565b9150508060ff16600114610ea0578060ff16600214610ea05760028160ff1611610ea05760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610334565b60405163b2dc5dc360e01b81526001600160a01b0385169063b2dc5dc39061088a90869086906004016120e8565b600154600114610f0d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff1615610f555760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b6000610f60836118c5565b91505060018160ff1610610ff2578060ff16600114610fc6578060ff16600214610fc65760028160ff1611610fc65760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610334565b60405163b80f55c960e01b81526001600160a01b0384169063b80f55c9906104eb908590600401612160565b826001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106cd57600080fd5b60015460011461106c5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff16156110b45760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b60006110bf856118c5565b9150508060ff1660021415610522576040516313e0c8c360e11b81526004810185905260248101849052604481018390526001600160a01b038616906327c19186906064016109f0565b6001546001146111485760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610334565b6002600155600054600160a01b900460ff16156111905760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b60008061119c846118c5565b9150915060018160ff161015611367576001600160a01b0383161580159061123b57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a082319060240160206040518083038186803b15801561120057600080fd5b505afa158015611214573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611238919061205e565b15155b6112d9576001600160a01b038416316112815760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b6044820152606401610334565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156112bc57600080fd5b505af11580156112d0573d6000803e3d6000fd5b50505050611334565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff166001141561152e576001600160a01b0383161580159061140257506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a082319060240160206040518083038186803b1580156113c757600080fd5b505afa1580156113db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ff919061205e565b15155b6114a0576001600160a01b038416316114485760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b6044820152606401610334565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561148357600080fd5b505af1158015611497573d6000803e3d6000fd5b505050506114fb565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b1580156114e257600080fd5b505af11580156114f6573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600214156116f5576001600160a01b038316158015906115c957506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a082319060240160206040518083038186803b15801561158e57600080fd5b505afa1580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c6919061205e565b15155b611667576001600160a01b0384163161160f5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b6044820152606401610334565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561164a57600080fd5b505af115801561165e573d6000803e3d6000fd5b505050506116c2565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b1580156116a957600080fd5b505af11580156116bd573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b60028160ff1611156108bd576001600160a01b0383161580159061179057506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a082319060240160206040518083038186803b15801561175557600080fd5b505afa158015611769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178d919061205e565b15155b61182e576001600160a01b038416316117d65760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b6044820152606401610334565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561181157600080fd5b505af1158015611825573d6000803e3d6000fd5b50505050611889565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b15801561187057600080fd5b505af1158015611884573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b9060240160206040518083038186803b15801561190e57600080fd5b505afa158015611922573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611946919061205e565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb90602401604080518083038186803b15801561198a57600080fd5b505afa15801561199e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c29190611ecd565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd9060240160206040518083038186803b158015611a0857600080fd5b505afa158015611a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a409190612076565b9050915091565b600054600160a01b900460ff16611aa05760405162461bcd60e51b815260206004820152600860248201527f554e5041555345440000000000000000000000000000000000000000000000006044820152606401610334565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600054600160a01b900460ff1615611b265760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610334565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001611ad9565b60018360ff161015611bd65760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf906024015b600060405180830381600087803b158015611bb957600080fd5b505af1158015611bcd573d6000803e3d6000fd5b50505050505050565b8260ff1660011415611c105760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401611b9f565b8260ff16600214156105225760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401611b9f565b8260ff1660021415610522576040516331a9da3d60e21b815281151560048201526001600160a01b0383169063c6a768f490602401611b9f565b8260ff166002141561052257604051637e62f3b360e01b815281151560048201526001600160a01b03831690637e62f3b390602401611b9f565b600082601f830112611cce578081fd5b8135602067ffffffffffffffff821115611cea57611cea612207565b8160051b611cf98282016121a6565b838152828101908684018388018501891015611d13578687fd5b8693505b85841015611d35578035835260019390930192918401918401611d17565b50979650505050505050565b600060208284031215611d52578081fd5b8135611d5d8161221d565b9392505050565b60008060408385031215611d76578081fd5b8235611d818161221d565b91506020830135611d918161221d565b809150509250929050565b600080600060608486031215611db0578081fd5b8335611dbb8161221d565b92506020840135611dcb8161221d565b9150604084013567ffffffffffffffff811115611de6578182fd5b611df286828701611cbe565b9150509250925092565b600080600060408486031215611e10578283fd5b8335611e1b8161221d565b9250602084013567ffffffffffffffff80821115611e37578384fd5b818601915086601f830112611e4a578384fd5b813581811115611e58578485fd5b8760208260051b8501011115611e6c578485fd5b6020830194508093505050509250925092565b60008060408385031215611e91578182fd5b8235611e9c8161221d565b9150602083013567ffffffffffffffff811115611eb7578182fd5b611ec385828601611cbe565b9150509250929050565b60008060408385031215611edf578182fd5b8251611eea8161221d565b6020840151909250611d9181612235565b600080600060608486031215611f0f578283fd5b8335611f1a8161221d565b92506020840135611f2a81612235565b91506040840135611f3a81612243565b809150509250925092565b60008060408385031215611d76578182fd5b60008060408385031215611f69578182fd5b8235611f748161221d565b915060208381013567ffffffffffffffff80821115611f91578384fd5b818601915086601f830112611fa4578384fd5b813581811115611fb657611fb6612207565b611fc8601f8201601f191685016121a6565b91508082528784828501011115611fdd578485fd5b8084840185840137810190920192909252919491935090915050565b6000806040838503121561200b578182fd5b82356120168161221d565b946020939093013593505050565b60008060008060808587031215612039578182fd5b84356120448161221d565b966020860135965060408601359560600135945092505050565b60006020828403121561206f578081fd5b5051919050565b600060208284031215612087578081fd5b8151611d5d81612243565b6000815180845260208085019450808401835b838110156120c1578151875295820195908201906001016120a5565b509495945050505050565b600082516120de8184602087016121d7565b9190910192915050565b6001600160a01b038316815260406020820152600061210a6040830184612092565b949350505050565b60208082528181018390526000908460408401835b8681101561215557823561213a8161221d565b6001600160a01b031682529183019190830190600101612127565b509695505050505050565b602081526000611d5d6020830184612092565b60208152600082518060208401526121928160408501602087016121d7565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156121cf576121cf612207565b604052919050565b60005b838110156121f25781810151838201526020016121da565b83811115612201576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461223257600080fd5b50565b801515811461223257600080fd5b60ff8116811461223257600080fdfea164736f6c6343000804000a";

type MADRouter1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter1155__factory extends ContractFactory {
  constructor(...args: MADRouter1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter1155> {
    return super.deploy(_factory, overrides || {}) as Promise<MADRouter1155>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, overrides || {});
  }
  override attach(address: string): MADRouter1155 {
    return super.attach(address) as MADRouter1155;
  }
  override connect(signer: Signer): MADRouter1155__factory {
    return super.connect(signer) as MADRouter1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter1155Interface {
    return new utils.Interface(_abi) as MADRouter1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter1155 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter1155;
  }
}
