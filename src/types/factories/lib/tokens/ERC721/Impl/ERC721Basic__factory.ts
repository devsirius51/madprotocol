/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b506040516200291c3803806200291c833981016040819052620000399162000327565b80888881600090805190602001906200005492919062000199565b5080516200006a90600190602084019062000199565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3508551620000ce90600b90602089019062000199565b50600c859055600d849055600e8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600681905560078054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505062000453565b828054620001a79062000400565b90600052602060002090601f016020900481019282620001cb576000855562000216565b82601f10620001e657805160ff191683800117855562000216565b8280016001018555821562000216579182015b8281111562000216578251825591602001919060010190620001f9565b506200022492915062000228565b5090565b5b8082111562000224576000815560010162000229565b80516001600160a01b03811681146200025757600080fd5b919050565b600082601f8301126200026d578081fd5b81516001600160401b03808211156200028a576200028a6200043d565b604051601f8301601f19908116603f01168101908282118183101715620002b557620002b56200043d565b81604052838152602092508683858801011115620002d1578485fd5b8491505b83821015620002f45785820183015181830184015290820190620002d5565b838211156200030557848385830101525b9695505050505050565b80516001600160601b03811681146200025757600080fd5b600080600080600080600080610100898b03121562000344578384fd5b88516001600160401b03808211156200035b578586fd5b620003698c838d016200025c565b995060208b01519150808211156200037f578586fd5b6200038d8c838d016200025c565b985060408b0151915080821115620003a3578586fd5b50620003b28b828c016200025c565b9650506060890151945060808901519350620003d160a08a016200023f565b9250620003e160c08a016200030f565b9150620003f160e08a016200023f565b90509295985092959890939650565b600181811c908216806200041557607f821691505b602082108114156200043757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6124b980620004636000396000f3fe6080604052600436106101c25760003560e01c80636352211e116100f7578063a0712d6811610095578063c87b56dd11610064578063c87b56dd1461053c578063d5abeb011461055c578063e985e9c514610572578063f4f3b200146105ad57600080fd5b8063a0712d68146104c9578063a22cb465146104dc578063b80f55c9146104fc578063b88d4fde1461051c57600080fd5b8063879fbedf116100d1578063879fbedf1461045e5780638da5cb5b1461047e57806395d89b411461049e578063a035b1fe146104b357600080fd5b80636352211e1461040957806370a0823114610429578063714c53981461044957600080fd5b806322ab47a1116101645780633ccfd60b1161013e5780633ccfd60b1461038f5780633cd8045e146103a457806342842e0e146103c957806355f804b3146103e957600080fd5b806322ab47a11461031657806323b872dd146103305780632a55205a1461035057600080fd5b8063095ea7b3116101a0578063095ea7b31461026c57806313af40351461028e578063150b7a02146102ae57806318160ddd146102f357600080fd5b806301ffc9a7146101c757806306fdde03146101fc578063081812fc1461021e575b600080fd5b3480156101d357600080fd5b506101e76101e23660046120bf565b6105cd565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b5061021161063a565b6040516101f39190612330565b34801561022a57600080fd5b50610254610239366004612184565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b34801561027857600080fd5b5061028c610287366004611fd2565b6106c8565b005b34801561029a57600080fd5b5061028c6102a9366004611e56565b6107af565b3480156102ba57600080fd5b506102da6102c9366004611f0d565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101f3565b3480156102ff57600080fd5b50610308610844565b6040519081526020016101f3565b34801561032257600080fd5b50600e546101e79060ff1681565b34801561033c57600080fd5b5061028c61034b366004611ecd565b610854565b34801561035c57600080fd5b5061037061036b3660046121b4565b610a3a565b604080516001600160a01b0390931683526020830191909152016101f3565b34801561039b57600080fd5b5061028c610a70565b3480156103b057600080fd5b50600e546102549061010090046001600160a01b031681565b3480156103d557600080fd5b5061028c6103e4366004611ecd565b610e09565b3480156103f557600080fd5b5061028c6104043660046120f7565b610f10565b34801561041557600080fd5b50610254610424366004612184565b610fae565b34801561043557600080fd5b50610308610444366004611e56565b611005565b34801561045557600080fd5b50610211611079565b34801561046a57600080fd5b5061028c6104793660046120a5565b61110b565b34801561048a57600080fd5b50600854610254906001600160a01b031681565b3480156104aa57600080fd5b50610211611191565b3480156104bf57600080fd5b50610308600c5481565b61028c6104d7366004612184565b61119e565b3480156104e857600080fd5b5061028c6104f7366004611fa7565b6112c2565b34801561050857600080fd5b5061028c610517366004611ffd565b61132e565b34801561052857600080fd5b5061028c610537366004611f0d565b6113e0565b34801561054857600080fd5b50610211610557366004612184565b6114d7565b34801561056857600080fd5b50610308600d5481565b34801561057e57600080fd5b506101e761058d366004611e95565b600560209081526000928352604080842090915290825290205460ff1681565b3480156105b957600080fd5b5061028c6105c8366004611e56565b611533565b60006301ffc9a760e01b6001600160e01b0319831614806105fe57506380ac58cd60e01b6001600160e01b03198316145b806106195750635b5e139f60e01b6001600160e01b03198316145b80610634575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461064790612417565b80601f016020809104026020016040519081016040528092919081815260200182805461067390612417565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061071157506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107535760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146107f85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161074a565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061084f600a5490565b905090565b6000818152600260205260409020546001600160a01b038481169116146108bd5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d00000000000000000000000000000000000000000000604482015260640161074a565b6001600160a01b0382166109135760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161074a565b336001600160a01b038416148061094d57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061096e57506000818152600460205260409020546001600160a01b031633145b6109ab5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161074a565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610a5d90856123cc565b610a6791906123ac565b90509250929050565b6008546001600160a01b03163314610ab95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161074a565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0957600080fd5b505afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b41919061219c565b905060008167ffffffffffffffff811115610b6c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610b95578160200160208202803683370190505b50905060008267ffffffffffffffff811115610bc157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610bea578160200160208202803683370190505b5090504760005b84811015610d9657600e54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be9060240160206040518083038186803b158015610c4357600080fd5b505afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190611e79565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf9060240160206040518083038186803b158015610ccc57600080fd5b505afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d04919061219c565b905081868481518110610d2757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152612710610d4d8260646123cc565b610d5790866123cc565b610d6191906123ac565b858481518110610d8157634e487b7160e01b600052603260045260246000fd5b60209081029190910101525050600101610bf1565b60005b85811015610e0157610df9858281518110610dc457634e487b7160e01b600052603260045260246000fd5b6020026020010151858381518110610dec57634e487b7160e01b600052603260045260246000fd5b602002602001015161194e565b600101610d99565b505050505050565b610e14838383610854565b6001600160a01b0382163b1580610ecc5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b158015610e8857600080fd5b505af1158015610e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec091906120db565b6001600160e01b031916145b610f0b5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161074a565b505050565b6008546001600160a01b03163314610f595760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161074a565b8051610f6c90600b906020840190611dad565b5080604051610f7b91906121f1565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806110005760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161074a565b919050565b60006001600160a01b03821661105d5760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015260640161074a565b506001600160a01b031660009081526003602052604090205490565b6060600b805461108890612417565b80601f01602080910402602001604051908101604052809291908181526020018280546110b490612417565b80156111015780601f106110d657610100808354040283529160200191611101565b820191906000526020600020905b8154815290600101906020018083116110e457829003601f168201915b5050505050905090565b6008546001600160a01b031633146111545760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161074a565b600e805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6001805461064790612417565b6009546001146111f05760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161074a565b6002600955600e5460ff16611218576040516316851fc760e11b815260040160405180910390fd5b80600d5481611226600a5490565b6112309190612394565b111561124f5760405163d05cb60960e01b815260040160405180910390fd5b600c54823461125e82846123cc565b1461127c5760405163f7760f2560e01b815260040160405180910390fd5b60005b848110156112a057611298336112936119a9565b6119c0565b60010161127f565b848110156112b65763dfb035c96000526004601cfd5b50506001600955505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b031633146113775760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161074a565b80516000905b808210156113ca5761138f600a611ac2565b6113bf8383815181106113b257634e487b7160e01b600052603260045260246000fd5b6020026020010151611adf565b81600101915061137d565b80821015610f0b5763dfb035c96000526004601cfd5b6113eb858585610854565b6001600160a01b0384163b15806114915750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906114339033908a908990899089906004016122df565b602060405180830381600087803b15801561144d57600080fd5b505af1158015611461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148591906120db565b6001600160e01b031916145b6114d05760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161074a565b5050505050565b60606114e1610844565b82111561150157604051635d68437560e11b815260040160405180910390fd5b600b61150c83611bac565b60405160200161151d92919061220d565b6040516020818303038152906040529050919050565b6008546001600160a01b0316331461157c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161074a565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115cc57600080fd5b505afa1580156115e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611604919061219c565b905060008167ffffffffffffffff81111561162f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611658578160200160208202803683370190505b50905060008267ffffffffffffffff81111561168457634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156116ad578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a082319060240160206040518083038186803b1580156116f557600080fd5b505afa158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172d919061219c565b90505b848210156118d957600e54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be9060240160206040518083038186803b15801561178257600080fd5b505afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba9190611e79565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf9060240160206040518083038186803b15801561180b57600080fd5b505afa15801561181f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611843919061219c565b90508186858151811061186657634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015261271061188c8260646123cc565b61189690856123cc565b6118a091906123ac565b8585815181106118c057634e487b7160e01b600052603260045260246000fd5b6020026020010181815250508360010193505050611730565b60005b858110156119455761193d8786838151811061190857634e487b7160e01b600052603260045260246000fd5b602002602001015186848151811061193057634e487b7160e01b600052603260045260246000fd5b6020026020010151611bfb565b6001016118dc565b50505050505050565b600080600080600085875af1905080610f0b5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161074a565b60006119b9600a80546001019055565b50600a5490565b6119ca8282611c87565b6001600160a01b0382163b1580611a7f5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b158015611a3b57600080fd5b505af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7391906120db565b6001600160e01b031916145b611abe5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161074a565b5050565b805480611ad75763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611b315760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161074a565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611be957600183039250600a81066030018353600a9004611bcb565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611c815760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161074a565b50505050565b6001600160a01b038216611cdd5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161074a565b6000818152600260205260409020546001600160a01b031615611d425760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e544544000000000000000000000000000000000000604482015260640161074a565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611db990612417565b90600052602060002090601f016020900481019282611ddb5760008555611e21565b82601f10611df457805160ff1916838001178555611e21565b82800160010185558215611e21579182015b82811115611e21578251825591602001919060010190611e06565b50611e2d929150611e31565b5090565b5b80821115611e2d5760008155600101611e32565b8035801515811461100057600080fd5b600060208284031215611e67578081fd5b8135611e728161247e565b9392505050565b600060208284031215611e8a578081fd5b8151611e728161247e565b60008060408385031215611ea7578081fd5b8235611eb28161247e565b91506020830135611ec28161247e565b809150509250929050565b600080600060608486031215611ee1578081fd5b8335611eec8161247e565b92506020840135611efc8161247e565b929592945050506040919091013590565b600080600080600060808688031215611f24578081fd5b8535611f2f8161247e565b94506020860135611f3f8161247e565b935060408601359250606086013567ffffffffffffffff80821115611f62578283fd5b818801915088601f830112611f75578283fd5b813581811115611f83578384fd5b896020828501011115611f94578384fd5b9699959850939650602001949392505050565b60008060408385031215611fb9578182fd5b8235611fc48161247e565b9150610a6760208401611e46565b60008060408385031215611fe4578182fd5b8235611fef8161247e565b946020939093013593505050565b6000602080838503121561200f578182fd5b823567ffffffffffffffff80821115612026578384fd5b818501915085601f830112612039578384fd5b81358181111561204b5761204b612468565b8060051b915061205c848301612363565b8181528481019084860184860187018a1015612076578788fd5b8795505b8386101561209857803583526001959095019491860191860161207a565b5098975050505050505050565b6000602082840312156120b6578081fd5b611e7282611e46565b6000602082840312156120d0578081fd5b8135611e7281612496565b6000602082840312156120ec578081fd5b8151611e7281612496565b60006020808385031215612109578182fd5b823567ffffffffffffffff80821115612120578384fd5b818501915085601f830112612133578384fd5b81358181111561214557612145612468565b612157601f8201601f19168501612363565b9150808252868482850101111561216c578485fd5b80848401858401378101909201929092529392505050565b600060208284031215612195578081fd5b5035919050565b6000602082840312156121ad578081fd5b5051919050565b600080604083850312156121c6578182fd5b50508035926020909101359150565b600081516121e78185602086016123eb565b9290920192915050565b600082516122038184602087016123eb565b9190910192915050565b600080845482600182811c91508083168061222957607f831692505b602080841082141561224957634e487b7160e01b87526022600452602487fd5b81801561225d576001811461226e5761229a565b60ff1986168952848901965061229a565b60008b815260209020885b868110156122925781548b820152908501908301612279565b505084890196505b5050505050506122d66122ad82866121d5565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b602081526000825180602084015261234f8160408501602087016123eb565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561238c5761238c612468565b604052919050565b600082198211156123a7576123a7612452565b500190565b6000826123c757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156123e6576123e6612452565b500290565b60005b838110156124065781810151838201526020016123ee565b83811115611c815750506000910152565b600181811c9082168061242b57607f821691505b6020821081141561244c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461249357600080fd5b50565b6001600160e01b03198116811461249357600080fdfea164736f6c6343000804000a";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
