/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MADFactory721, MADFactory721Interface } from "../MADFactory721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "SplitterFail",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCreator",
        type: "address",
      },
    ],
    name: "ERC721BasicCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCreator",
        type: "address",
      },
    ],
    name: "ERC721LazyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCreator",
        type: "address",
      },
    ],
    name: "ERC721MinimalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCreator",
        type: "address",
      },
    ],
    name: "ERC721WhitelistCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "colInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "enum Types.ERC721Type",
        name: "colType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "colSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSalt",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "creatorCheck",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colAddress",
        type: "address",
      },
    ],
    name: "getColID",
    outputs: [
      {
        internalType: "bytes32",
        name: "colID",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    name: "getDeployedAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_splitterSalt",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ambassador",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ambShare",
        type: "uint256",
      },
    ],
    name: "splitterCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "typeChecker",
    outputs: [
      {
        internalType: "uint8",
        name: "pointer",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405260016000553480156200001657600080fd5b506040516200237e3803806200237e833981016040819052620000399162000270565b3060601b608052600180546001600160a01b0319163390811790915560405181906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506001805460ff60a01b191690556200009b83620000ba565b620000a68262000145565b620000b181620001cc565b505050620002b9565b6001546001600160a01b03163314620001095760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60068190556040516001600160a01b038216907f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc90600090a250565b6001546001600160a01b03163314620001905760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640162000100565b60058190556040516001600160a01b038216907f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090600090a250565b6001546001600160a01b03163314620002175760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640162000100565b60078190556040516001600160a01b038216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b80516001600160a01b03811681146200026b57600080fd5b919050565b60008060006060848603121562000285578283fd5b620002908462000253565b9250620002a06020850162000253565b9150620002b06040850162000253565b90509250925092565b60805160601c6120a6620002d8600039600061172801526120a66000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638da5cb5b116100d8578063bc8b58381161008c578063f887ea4011610066578063f887ea40146103eb578063f9f411d8146103fe578063fa2405171461041157600080fd5b8063bc8b5838146103a0578063c0d78655146103b3578063d93cb8fd146103c657600080fd5b80639750f2e0116100bd5780639750f2e0146102cc5780639e5c4b701461035b578063b64bd5eb1461036e57600080fd5b80638da5cb5b146102a657806395cd5193146102b957600080fd5b80636c19e7831161013a57806380f556051161011457806380f556051461024a5780638456cb59146102755780638691fe461461027d57600080fd5b80636c19e783146102115780636dcea85f1461022457806376de0f3d1461023757600080fd5b80633f4ba83a1161016b5780633f4ba83a146101ba5780635c975abb146101c2578063617d1d3b146101e057600080fd5b806306fdde031461018757806313af4035146101a5575b600080fd5b61018f61046f565b60405161019c9190611e3a565b60405180910390f35b6101b86101b3366004611ab6565b610487565b005b6101b8610513565b600154600160a01b900460ff165b604051901515815260200161019c565b6102036101ee366004611ab6565b60601b6bffffffffffffffffffffffff191690565b60405190815260200161019c565b6101b861021f366004611ab6565b610566565b6101b8610232366004611ab6565b6105eb565b6101d0610245366004611aee565b610670565b60065461025d906001600160a01b031681565b6040516001600160a01b03909116815260200161019c565b6101b8610782565b61020361028b366004611ab6565b6001600160a01b031660009081526003602052604090205490565b60015461025d906001600160a01b031681565b6101b86102c7366004611c20565b6107d3565b6103226102da366004611aee565b60046020818152600093845260408085209091529183529120805460018201546002830154600384015493909401546001600160a01b03928316949193919092169160ff1685565b604080516001600160a01b039687168152602081019590955292909416918301919091526060820152901515608082015260a00161019c565b6101b8610369366004611bc8565b611056565b61038161037c366004611b51565b611463565b604080516001600160a01b03909316835290151560208301520161019c565b61025d6103ae366004611b8d565b6114af565b6101b86103c1366004611ab6565b6114c9565b6103d96103d4366004611b51565b61154e565b60405160ff909116815260200161019c565b60055461025d906001600160a01b031681565b61020361040c366004611b26565b61156e565b61045e61041f366004611b51565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0380831694600160a01b90930460ff1693911685565b60405161019c959493929190611d52565b6060602080526707666163746f727960475260606020f35b6001546001600160a01b031633146104d55760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60018190556040516001600160a01b0382169033907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6001546001600160a01b0316331461055c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104cc565b61056461159f565b565b6001546001600160a01b031633146105af5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104cc565b60078190556040516001600160a01b038216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6001546001600160a01b031633146106345760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104cc565b60068190556040516001600160a01b038216907f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc90600090a250565b600061067a61163b565b6106838261166e565b61068b575060005b6001600160a01b0382166000908152600360205260408120546bffffffffffffffffffffffff19606086901b16919067ffffffffffffffff8111156106e057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610709578160200160208202803683370190505b50805190915060009060035b81831015610777576001600160a01b038716600090815260208290526040902080548490811061075557634e487b7160e01b600052603260045260246000fd5b906000526020600020015485141561076c57600195505b826001019250610715565b505050505092915050565b6001546001600160a01b031633146107cb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104cc565b610564611697565b6000546001146108125760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104cc565b600260005561081f61171d565b600154600160a01b900460ff16156108625760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104cc565b61086c8983611795565b610875816117e0565b60018960ff161015610a6557600554604051630e2ff12160e21b8152600091829173__$b997b87af3d2e34e8c13da7c5c4bfea97a$__916338bfc484916108d6918e918e918e918c918f918d916001600160a01b0316908d90600401611f67565b604080518083038186803b1580156108ed57600080fd5b505af4158015610901573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109259190611b69565b90925090506000606082901b6bffffffffffffffffffffffff1916326000818152600360208181526040808420805460018101825590855282852001869055805160a0810182529485528482018481528582018a90524360608701526001600160a01b038c8116608088015287865260029093529320845181546001600160a01b03198116919093169081178255935195965093949284926001600160a81b03199092161790600160a01b9084908111156109f057634e487b7160e01b600052602160045260246000fd5b0217905550604082810151600183015560608301516002830155608090920151600390910180546001600160a01b0319166001600160a01b039283161790559051329184811691908816907f3e688916d8dd7e97d673a7357cf713aa51394378ccd1acbf60e0979aade22cf490600090a45050505b8860ff1660011415610c5a57600554604051630121b9d960e01b8152600091829173__$785115ade85da2325a219769175abf82ff$__91630121b9d991610aca918e918e918e918c918f918f918e916001600160a01b03909116908e90600401611fe6565b604080518083038186803b158015610ae157600080fd5b505af4158015610af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b199190611b69565b90925090506000606082901b6bffffffffffffffffffffffff191632600081815260036020818152604080842080546001808201835591865283862001879055815160a0810183529586528583019081528582018a90524360608701526001600160a01b038c8116608088015287865260029093529320845181546001600160a01b03198116919093169081178255935195965093949284926001600160a81b03199092161790600160a01b908490811115610be557634e487b7160e01b600052602160045260246000fd5b0217905550604082810151600183015560608301516002830155608090920151600390910180546001600160a01b0319166001600160a01b039283161790559051329184811691908816907fed5460cb7390412dbfaca251baa0fb2b87994977429b2c8e68d9eaee33cf3b5890600090a45050505b8860ff1660021415610e51576005546040516307d99e5b60e11b8152600091829173__$3f62e828fa34ef2939e36d97e9ecccee8f$__91630fb33cb691610cbf918e918e918e918c918f918f918e916001600160a01b03909116908e90600401611fe6565b604080518083038186803b158015610cd657600080fd5b505af4158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e9190611b69565b90925090506000606082901b6bffffffffffffffffffffffff1916326000818152600360208181526040808420805460018101825590855282852001869055805160a08101825294855260028583018181528683018b90524360608801526001600160a01b038d81166080890152888752919093529320845181546001600160a01b03198116919095169081178255915195965093949284926001600160a81b031990911690911790600160a01b908490811115610ddc57634e487b7160e01b600052602160045260246000fd5b0217905550604082810151600183015560608301516002830155608090920151600390910180546001600160a01b0319166001600160a01b039283161790559051329184811691908816907f6a3ee4d214ef0000f39f27711d4a71c6c565e95b910910ac96825e98267be61790600090a45050505b60028960ff16111561104657600554600754604051634569563d60e01b8152600092839273__$8453101c277dcb246f5fde8e1e36aa4a24$__92634569563d92610eb7928f928f928f928d928d926001600160a01b039081169216908d90600401611ee5565b604080518083038186803b158015610ece57600080fd5b505af4158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f069190611b69565b90925090506000606082901b6bffffffffffffffffffffffff1916326000818152600360208181526040808420805460018101825590855282852001869055805160a0810182529485528482018381528582018a90524360608701526001600160a01b038c8116608088015287865260029093529320845181546001600160a01b03198116919093169081178255935195965093949284926001600160a81b03199092161790600160a01b908490811115610fd157634e487b7160e01b600052602160045260246000fd5b0217905550604082810151600183015560608301516002830155608090920151600390910180546001600160a01b0319166001600160a01b039283161790559051329184811691908816907f5d6778ad0bc93c1ea0671584d88142a2d9f5a22f807c3fc2f445e5c5f072de1090600090a45050505b5050600160005550505050505050565b6000546001146110955760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104cc565b60026000556110a261171d565b600154600160a01b900460ff16156110e55760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104cc565b825160208401206001600160a01b038316611294576001546000906111149082906001600160a01b0316611802565b90506000611122600061186a565b9050600073__$e0b3dea100c37e1c0d530933159e390817$__636ec6cf158885856040518463ffffffff1660e01b815260040161116193929190611e4d565b60206040518083038186803b15801561117957600080fd5b505af415801561118d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b19190611ad2565b6040805160a0810182526001600160a01b0380841680835260208084018a81526000858701818152606087018281526001608089018181523280865260048089528c872099875298909752938a9020985189549089166001600160a01b0319918216178a5594519089015590516002880180549190971693169290921790945551600385015591519201805492151560ff19909316929092179091559051919250907f539b061603ad7342d8dffcd213ed3dc2afd3a1b9bc14e3ff19be01fa3416c6619061128490859087908690611da7565b60405180910390a2505050611458565b81158015906112a35750601582105b80156112b757506001600160a01b03831615155b1561144b576001546000906112d69085906001600160a01b0316611802565b905060006112e38461186a565b9050600073__$e0b3dea100c37e1c0d530933159e390817$__636ec6cf158885856040518463ffffffff1660e01b815260040161132293929190611e4d565b60206040518083038186803b15801561133a57600080fd5b505af415801561134e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113729190611ad2565b6040805160a0810182526001600160a01b0380841680835260208084018a81528c8416858701908152606086018d815260016080880181815232600081815260048089528c822099825298909752958a9020985189549089166001600160a01b0319918216178a5594519189019190915591516002880180549190971693169290921790945551600385015591519201805492151560ff19909316929092179091559051919250907f539b061603ad7342d8dffcd213ed3dc2afd3a1b9bc14e3ff19be01fa3416c6619061128490859087908690611da7565b62adecf06000526004601cfd5b505060016000555050565b60008061146e6118d2565b600083815260026020526040902080546001600160a01b031692503283141561149657600191505b816114a957634ca888676000526004601cfd5b50915091565b805160208201206000906114c281611905565b9392505050565b6001546001600160a01b031633146115125760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104cc565b60058190556040516001600160a01b038216907f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090600090a250565b60006115586118d2565b5060009081526002602052604090205460a01c90565b6003602052816000526040600020818154811061158a57600080fd5b90600052602060002001600091509150505481565b600154600160a01b900460ff166115f85760405162461bcd60e51b815260206004820152600860248201527f554e50415553454400000000000000000000000000000000000000000000000060448201526064016104cc565b6001805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b6006543314610564577f4ca88867ffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005260046000fd5b600060405160036020820152826040820152604081209050805461169157600091505b50919050565b600154600160a01b900460ff16156116da5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104cc565b6001805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001611631565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105645760405162461bcd60e51b815260206004820152600860248201527f4241445f43414c4c00000000000000000000000000000000000000000000000060448201526064016104cc565b3260009081526004602081815260408084206001600160a01b0386168552909152909120015460ff1660038311811517156117db57634ca8886760e01b60005260046000fd5b505050565b6019810615156103e8821117156117ff5763e0e54ced6000526004601cfd5b50565b606082156001811461181957801561183d57611863565b60405191506002600083015282602083015232604083015260608201604052611863565b604051915060036000830152826020830152836040830152326060830152608082016040525b5092915050565b60608115600181146118815780156118a757611691565b604051915060026000830152600a6020830152605a604083015260608201604052611691565b50506040805160038152600a6020820152808201839052605a92909203606083015260808201905290565b6005543314610564577f4ca88867ffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005260046000fd5b604080518082018252601081527f67363d3d37363d34f03d5260086018f30000000000000000000000000000000060209182015290517fff00000000000000000000000000000000000000000000000000000000000000918101919091526bffffffffffffffffffffffff193060601b166021820152603581018290527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f605582015260009081906119ce906075015b6040516020818303038152906040528051906020012090565b6040516135a560f21b60208201526bffffffffffffffffffffffff19606083901b166022820152600160f81b60368201529091506114c2906037016119b5565b8035611a1981612084565b919050565b600082601f830112611a2e578081fd5b813567ffffffffffffffff80821115611a4957611a4961206e565b604051601f8301601f19908116603f01168101908282118183101715611a7157611a7161206e565b81604052838152866020858801011115611a89578485fd5b8360208701602083013792830160200193909352509392505050565b803560ff81168114611a1957600080fd5b600060208284031215611ac7578081fd5b81356114c281612084565b600060208284031215611ae3578081fd5b81516114c281612084565b60008060408385031215611b00578081fd5b8235611b0b81612084565b91506020830135611b1b81612084565b809150509250929050565b60008060408385031215611b38578182fd5b8235611b4381612084565b946020939093013593505050565b600060208284031215611b62578081fd5b5035919050565b60008060408385031215611b7b578182fd5b825191506020830151611b1b81612084565b600060208284031215611b9e578081fd5b813567ffffffffffffffff811115611bb4578182fd5b611bc084828501611a1e565b949350505050565b600080600060608486031215611bdc578081fd5b833567ffffffffffffffff811115611bf2578182fd5b611bfe86828701611a1e565b9350506020840135611c0f81612084565b929592945050506040919091013590565b60008060008060008060008060006101208a8c031215611c3e578485fd5b611c478a611aa5565b985060208a013567ffffffffffffffff80821115611c63578687fd5b611c6f8d838e01611a1e565b995060408c0135915080821115611c84578687fd5b611c908d838e01611a1e565b985060608c0135915080821115611ca5578687fd5b611cb18d838e01611a1e565b975060808c0135965060a08c0135955060c08c0135915080821115611cd4578485fd5b50611ce18c828d01611a1e565b935050611cf060e08b01611a0e565b91506101008a013590509295985092959850929598565b60008151808452815b81811015611d2c57602081850181015186830182015201611d10565b81811115611d3d5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03868116825260a082019060048710611d8257634e487b7160e01b600052602160045260246000fd5b8660208401528560408401528460608401528084166080840152509695505050505050565b606080825284519082018190526000906020906080840190828801845b82811015611de057815184529284019290840190600101611dc4565b50505083810382850152855180825286830191830190845b81811015611e1f5783516001600160a01b0316835260208301938501939250600101611df8565b50506001600160a01b03861660408601529250611bc0915050565b6020815260006114c26020830184611d07565b606081526000611e606060830186611d07565b828103602084810191909152855180835286820192820190845b81811015611ea15784516001600160a01b0316835260208301948401949250600101611e7a565b505084810360408601528551808252908201925081860190845b81811015611ed757825185529383019391830191600101611ebb565b509298975050505050505050565b6000610100808352611ef98184018c611d07565b90508281036020840152611f0d818b611d07565b90508281036040840152611f21818a611d07565b90508281036060840152611f358189611d07565b6001600160a01b03978816608085015295871660a084015250509190931660c082015260e00191909152949350505050565b6000610100808352611f7b8184018c611d07565b90508281036020840152611f8f818b611d07565b90508281036040840152611fa3818a611d07565b90508281036060840152611fb78189611d07565b608084019790975250506001600160a01b0393841660a08201529190921660c082015260e00152949350505050565b6000610120808352611ffa8184018d611d07565b9050828103602084015261200e818c611d07565b90508281036040840152612022818b611d07565b90508281036060840152612036818a611d07565b6080840198909852505060a08101949094526001600160a01b0392831660c0850152911660e083015261010090910152949350505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146117ff57600080fdfea164736f6c6343000804000a";

type MADFactory721ConstructorParams =
  | [linkLibraryAddresses: MADFactory721LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactory721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MADFactory721__factory extends ContractFactory {
  constructor(...args: MADFactory721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MADFactory721__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MADFactory721LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b997b87af3d2e34e8c13da7c5c4bfea97a\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC721Deployer.sol:ERC721MinimalDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$785115ade85da2325a219769175abf82ff\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3f62e828fa34ef2939e36d97e9ecccee8f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC721Deployer.sol:ERC721WhitelistDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8453101c277dcb246f5fde8e1e36aa4a24\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC721Deployer.sol:ERC721LazyDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e0b3dea100c37e1c0d530933159e390817\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _marketplace: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADFactory721> {
    return super.deploy(
      _marketplace,
      _router,
      _signer,
      overrides || {}
    ) as Promise<MADFactory721>;
  }
  override getDeployTransaction(
    _marketplace: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketplace,
      _router,
      _signer,
      overrides || {}
    );
  }
  override attach(address: string): MADFactory721 {
    return super.attach(address) as MADFactory721;
  }
  override connect(signer: Signer): MADFactory721__factory {
    return super.connect(signer) as MADFactory721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactory721Interface {
    return new utils.Interface(_abi) as MADFactory721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADFactory721 {
    return new Contract(address, _abi, signerOrProvider) as MADFactory721;
  }
}

export interface MADFactory721LibraryAddresses {
  ["contracts/lib/deployers/ERC721Deployer.sol:ERC721MinimalDeployer"]: string;
  ["contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"]: string;
  ["contracts/lib/deployers/ERC721Deployer.sol:ERC721WhitelistDeployer"]: string;
  ["contracts/lib/deployers/ERC721Deployer.sol:ERC721LazyDeployer"]: string;
  ["contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"]: string;
}
